#!/usr/bin/env node

// solidity tutorial to refer to: https://www.youtube.com/watch?v=z4KmhL1PbPw&list=PLHc3x5s5U43YMJ12sIb_ulDyzijhkcOlX&index=13
var Web3 = require('web3');
// var web3 = require('ethereum.js')
var web3 = new Web3();

web3.setProvider(new web3.providers.HttpProvider('http://localhost:8545'));


userCode = "60606040525b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b60f28061003e6000396000f360606040526000357c01000000000000000000000000000000000000000000000000000000009004806341c0e1b51460435780638da5cb5b14605457603f565b6002565b3460025760526004805050608f565b005b346002576063600480505060cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156"
tenantCode = "6060604052604051610608380380610608833981016040528080518201919060200150505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b8060016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a057805160ff19168380011785556100d1565b828001600101855582156100d1579182015b828111156100d05782518260005055916020019190600101906100b2565b5b5090506100fc91906100de565b808211156100f857600081815060009055506001016100de565b5090565b50505b506104fa8061010e6000396000f36060604052361561007f576000357c010000000000000000000000000000000000000000000000000000000090048063402508161461008457806341c0e1b5146100a15780638da5cb5b146100b5578063b12a6852146100f3578063d74d1f4314610110578063dc40bcbb14610151578063f63e7db21461016e5761007f565b610002565b346100025761009f60048080359060200190919050506101ee565b005b34610002576100b3600480505061027d565b005b34610002576100c760048050506102ba565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b346100025761010e60048080359060200190919050506102e0565b005b346100025761012b60048080359060200190919050506103a7565b604051808415158152602001838152602001828152602001935050505060405180910390f35b346100025761016c60048080359060200190919050506103e7565b005b34610002576101806004805050610459565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606060405190810160405280600181526020014281526020016000815260200150600260005060008373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008201518160000160006101000a81548160ff0219169083021790555060208201518160010160005055604082015181600201600050559050505b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160009054906101000a900460ff161561039e5742600260005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506001016000508190555080600260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600201600050819055506103a3565b610002565b5b50565b60026000506020528060005260406000206000915090508060000160009054906101000a900460ff16908060010160005054908060020160005054905083565b8073ffffffffffffffffffffffffffffffffffffffff166108fc600260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600201600050549081150290604051809050600060405180830381858888f19350505050505b50565b60016000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f25780601f106104c7576101008083540402835291602001916104f2565b820191906000526020600020905b8154815290600101906020018083116104d557829003601f168201915b50505050508156"
landlordCode = "60606040526040516105c43803806105c4833981016040528080518201919060200180518201919060200150505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b8160016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a957805160ff19168380011785556100da565b828001600101855582156100da579182015b828111156100d95782518260005055916020019190600101906100bb565b5b50905061010591906100e7565b8082111561010157600081815060009055506001016100e7565b5090565b50508060026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015657805160ff1916838001178555610187565b82800160010185558215610187579182015b82811115610186578251826000505591602001919060010190610168565b5b5090506101b29190610194565b808211156101ae5760008181506000905550600101610194565b5090565b50505b50506103ff806101c56000396000f360606040526000357c01000000000000000000000000000000000000000000000000000000009004806340868fff1461006857806341c0e1b5146100e85780638da5cb5b146100fc5780639419bc291461013a578063b6f1e343146101ba57610063565b610002565b346100025761007a60048050506101e0565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156100da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610002576100fa6004805050610281565b005b346100025761010e60048050506102be565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b346100025761014c60048050506102e4565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101ac5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610002576101de6004808035906020019091908035906020019091905050610385565b005b60026000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102795780601f1061024e57610100808354040283529160200191610279565b820191906000526020600020905b81548152906001019060200180831161025c57829003601f168201915b505050505081565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016000508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561037d5780601f106103525761010080835404028352916020019161037d565b820191906000526020600020905b81548152906001019060200180831161036057829003601f168201915b505050505081565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663b12a685284604051827c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b156100025760325a03f115610002575050505b50505056"

// create contract object and provide ABI (use solidity realtime compiler to get contractCode https://ethereum.github.io/browser-solidity/#version=soljson-latest.js)
//web3.eth.contract(abiarray - descriptions of functions and events of the contract. https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI#JSON).at()
// abiarray is a JSON spec, a JSON representation of the functions of the contract

// create user object
var userContract = web3.eth.contract([{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"inputs":[],"type":"constructor"}]);
var user = userContract.new(
   {
     from: web3.eth.accounts[0], 
     data: '60606040525b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b60f28061003e6000396000f360606040526000357c01000000000000000000000000000000000000000000000000000000009004806341c0e1b51460435780638da5cb5b14605457603f565b6002565b3460025760526004805050608f565b005b346002576063600480505060cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156', 
     gas: 4700000
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('User contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })

// // create lease object
// leaseNew = leaseContract.new(
// 		landlord, tenant)

// createNewLeaseInstance = leaseContract.at['0x36b64d3c67970a052515dc845185deccc411336e']


// create tenant object

var _name = 'Marie' ;
var tenantContract = web3.eth.contract([{"constant":false,"inputs":[{"name":"_landlordAddress","type":"address"}],"name":"registerToLandlord","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_rent","type":"uint256"}],"name":"setRent","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"leases","outputs":[{"name":"active","type":"bool"},{"name":"lastUpdate","type":"uint256"},{"name":"rent","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_landlordAddress","type":"address"}],"name":"payRent","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"tenantName","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"inputs":[{"name":"_name","type":"string"}],"type":"constructor"}]);
var tenant = tenantContract.new(
   _name,
   {
     from: web3.eth.accounts[0], 
     data: '6060604052604051610608380380610608833981016040528080518201919060200150505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b8060016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a057805160ff19168380011785556100d1565b828001600101855582156100d1579182015b828111156100d05782518260005055916020019190600101906100b2565b5b5090506100fc91906100de565b808211156100f857600081815060009055506001016100de565b5090565b50505b506104fa8061010e6000396000f36060604052361561007f576000357c010000000000000000000000000000000000000000000000000000000090048063402508161461008457806341c0e1b5146100a15780638da5cb5b146100b5578063b12a6852146100f3578063d74d1f4314610110578063dc40bcbb14610151578063f63e7db21461016e5761007f565b610002565b346100025761009f60048080359060200190919050506101ee565b005b34610002576100b3600480505061027d565b005b34610002576100c760048050506102ba565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b346100025761010e60048080359060200190919050506102e0565b005b346100025761012b60048080359060200190919050506103a7565b604051808415158152602001838152602001828152602001935050505060405180910390f35b346100025761016c60048080359060200190919050506103e7565b005b34610002576101806004805050610459565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606060405190810160405280600181526020014281526020016000815260200150600260005060008373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008201518160000160006101000a81548160ff0219169083021790555060208201518160010160005055604082015181600201600050559050505b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160009054906101000a900460ff161561039e5742600260005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506001016000508190555080600260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600201600050819055506103a3565b610002565b5b50565b60026000506020528060005260406000206000915090508060000160009054906101000a900460ff16908060010160005054908060020160005054905083565b8073ffffffffffffffffffffffffffffffffffffffff166108fc600260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600201600050549081150290604051809050600060405180830381858888f19350505050505b50565b60016000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f25780601f106104c7576101008083540402835291602001916104f2565b820191906000526020600020905b8154815290600101906020018083116104d557829003601f168201915b50505050508156', 
     gas: 4700000
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Tenant Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })

// create landlord object

var _name = 'landlord name' ;
var _physicalAddress = 'physical address' ;
var landlordContract = web3.eth.contract([{"constant":true,"inputs":[],"name":"physicalAddress","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"landlordName","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_rent","type":"uint256"},{"name":"_tenantAddress","type":"address"}],"name":"setRent","outputs":[],"payable":false,"type":"function"},{"inputs":[{"name":"_name","type":"string"},{"name":"_physicalAddress","type":"string"}],"type":"constructor"}]);
var landlord = landlordContract.new(
   _name,
   _physicalAddress,
   {
     from: web3.eth.accounts[0], 
     data: '60606040526040516105c43803806105c4833981016040528080518201919060200180518201919060200150505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b8160016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a957805160ff19168380011785556100da565b828001600101855582156100da579182015b828111156100d95782518260005055916020019190600101906100bb565b5b50905061010591906100e7565b8082111561010157600081815060009055506001016100e7565b5090565b50508060026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015657805160ff1916838001178555610187565b82800160010185558215610187579182015b82811115610186578251826000505591602001919060010190610168565b5b5090506101b29190610194565b808211156101ae5760008181506000905550600101610194565b5090565b50505b50506103ff806101c56000396000f360606040526000357c01000000000000000000000000000000000000000000000000000000009004806340868fff1461006857806341c0e1b5146100e85780638da5cb5b146100fc5780639419bc291461013a578063b6f1e343146101ba57610063565b610002565b346100025761007a60048050506101e0565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156100da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610002576100fa6004805050610281565b005b346100025761010e60048050506102be565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b346100025761014c60048050506102e4565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101ac5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610002576101de6004808035906020019091908035906020019091905050610385565b005b60026000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102795780601f1061024e57610100808354040283529160200191610279565b820191906000526020600020905b81548152906001019060200180831161025c57829003601f168201915b505050505081565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016000508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561037d5780601f106103525761010080835404028352916020019161037d565b820191906000526020600020905b81548152906001019060200180831161036057829003601f168201915b505050505081565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663b12a685284604051827c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b156100025760325a03f115610002575050505b50505056', 
     gas: 4700000
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Landlord Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })

// create coinbase connection

var coinbase = web3.eth.coinbase;
console.log(coinbase);

var balance = web3.eth.getBalance(coinbase);
console.log(balance.toString(10));


